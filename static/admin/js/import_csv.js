document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å CSV" –≤ changelist
    const changelist = document.querySelector('.changelist-search');
    if (changelist) {
        const uploadButton = document.createElement('a');
        uploadButton.href = 'upload/';
        uploadButton.className = 'addlink';
        uploadButton.innerHTML = '–ó–∞–≥—Ä—É–∑–∏—Ç—å CSV —Ñ–∞–π–ª';
        uploadButton.style.marginLeft = '10px';
        changelist.appendChild(uploadButton);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–º–ø–æ—Ä—Ç–∞ –∏ –æ—Ç–º–µ–Ω—ã
    document.addEventListener('click', function(e) {
        // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
        if (e.target.classList.contains('btn-import-csv')) {
            e.preventDefault();
            
            const fileId = e.target.getAttribute('data-id');
            const button = e.target;
            
            if (confirm('–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞?')) {
                button.disabled = true;
                button.innerHTML = '‚è≥ –ó–∞–ø—É—Å–∫–∞—é...';
                button.style.background = '#999';
                
                fetch(`process/${fileId}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                        showMessage('success', data.message);
                        
                        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                        if (data.redirect_url) {
                            setTimeout(() => {
                                window.location.href = data.redirect_url;
                            }, 1000);
                        } else {
                            setTimeout(() => {
                                window.location.reload();
                            }, 2000);
                        }
                    } else {
                        showMessage('error', '–û—à–∏–±–∫–∞: ' + data.message);
                        button.disabled = false;
                        button.innerHTML = '‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–º–ø–æ—Ä—Ç';
                        button.style.background = '#417690';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showMessage('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–º–ø–æ—Ä—Ç–∞');
                    button.disabled = false;
                    button.innerHTML = '‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–º–ø–æ—Ä—Ç';
                    button.style.background = '#417690';
                });
            }
        }
        
        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –∏–º–ø–æ—Ä—Ç–∞
        if (e.target.classList.contains('btn-cancel-import')) {
            e.preventDefault();
            
            const fileId = e.target.getAttribute('data-id');
            const button = e.target;
            
            if (confirm('–û—Ç–º–µ–Ω–∏—Ç—å –∏–º–ø–æ—Ä—Ç? –ü—Ä–æ—Ü–µ—Å—Å –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')) {
                button.disabled = true;
                button.innerHTML = '‚è≥ –û—Ç–º–µ–Ω—è—é...';
                button.style.background = '#999';
                
                fetch(`cancel/${fileId}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showMessage('success', data.message);
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        showMessage('error', '–û—à–∏–±–∫–∞: ' + data.message);
                        button.disabled = false;
                        button.innerHTML = '‚èπ –û—Ç–º–µ–Ω–∏—Ç—å';
                        button.style.background = '#dc3545';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showMessage('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∏–º–ø–æ—Ä—Ç–∞');
                    button.disabled = false;
                    button.innerHTML = '‚èπ –û—Ç–º–µ–Ω–∏—Ç—å';
                    button.style.background = '#dc3545';
                });
            }
        }
    });
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    function showMessage(type, message) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const existingMessages = document.querySelectorAll('.import-message');
        existingMessages.forEach(msg => msg.remove());
        
        const messageDiv = document.createElement('div');
        messageDiv.className = `import-message alert-${type}`;
        messageDiv.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            padding: 15px 20px;
            border-radius: 5px;
            font-weight: bold;
            min-width: 300px;
            max-width: 500px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            ${type === 'success' ? 
                'background: #d4edda; border: 2px solid #c3e6cb; color: #155724;' : 
                'background: #f8d7da; border: 2px solid #f5c6cb; color: #721c24;'
            }
        `;
        messageDiv.innerHTML = `
            <span style="margin-right: 10px;">${type === 'success' ? '‚úÖ' : '‚ùå'}</span>
            ${message}
            <button onclick="this.parentElement.remove()" style="
                float: right; 
                background: none; 
                border: none; 
                font-size: 18px; 
                cursor: pointer;
                margin-left: 10px;
            ">√ó</button>
        `;
        
        document.body.appendChild(messageDiv);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (messageDiv.parentNode) {
                messageDiv.remove();
            }
        }, 5000);
    }
    
    // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    const fileInput = document.getElementById('id_csv_file');
    if (fileInput) {
        fileInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 50MB)
                if (file.size > 50 * 1024 * 1024) {
                    showMessage('error', '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50MB');
                    e.target.value = '';
                    return;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
                if (!file.name.toLowerCase().endsWith('.csv')) {
                    showMessage('error', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .csv');
                    e.target.value = '';
                    return;
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
                const info = document.createElement('div');
                info.className = 'file-info';
                info.style.cssText = `
                    margin-top: 10px;
                    padding: 10px;
                    background: #e7f3ff;
                    border: 1px solid #b8daff;
                    border-radius: 4px;
                    color: #0056b3;
                `;
                info.innerHTML = `
                    <strong>‚úÖ –§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ:</strong><br>
                    üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: ${file.name}<br>
                    üìä –†–∞–∑–º–µ—Ä: ${(file.size / 1024 / 1024).toFixed(2)} MB<br>
                    üîß –¢–∏–ø: ${file.type || 'text/csv'}
                `;
                
                // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
                const existingInfo = fileInput.parentNode.querySelector('.file-info');
                if (existingInfo) {
                    existingInfo.remove();
                }
                
                fileInput.parentNode.appendChild(info);
                showMessage('success', '–§–∞–π–ª –≤—ã–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"');
            }
        });
    }
    
    // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø–∏—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    const activeImports = document.querySelectorAll('.btn-cancel-import');
    if (activeImports.length > 0) {
        console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã, –≤–∫–ª—é—á–µ–Ω–æ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
        setTimeout(() => {
            window.location.reload();
        }, 30000);
    }
}); 