# Generated by Django 5.2.4 on 2025-08-10 07:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('logo', models.ImageField(blank=True, upload_to='brands/', verbose_name='Логотип')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ImportFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='imports/', verbose_name='CSV файл')),
                ('original_filename', models.CharField(max_length=255, verbose_name='Исходное имя файла')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('processed', models.BooleanField(default=False, verbose_name='Обработан')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обработки')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('processing', 'Обрабатывается'), ('completed', 'Завершен'), ('failed', 'Ошибка'), ('cancelled', 'Отменен')], default='pending', max_length=50, verbose_name='Статус')),
                ('current_row', models.IntegerField(default=0, verbose_name='Текущая строка')),
                ('total_rows', models.IntegerField(default=0, verbose_name='Всего строк')),
                ('processed_rows', models.IntegerField(default=0, verbose_name='Обработано строк')),
                ('created_products', models.IntegerField(default=0, verbose_name='Создано товаров')),
                ('updated_products', models.IntegerField(default=0, verbose_name='Обновлено товаров')),
                ('error_count', models.IntegerField(default=0, verbose_name='Количество ошибок')),
                ('error_log', models.TextField(blank=True, verbose_name='Лог ошибок')),
                ('cancelled', models.BooleanField(default=False, verbose_name='Отменен')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата отмены')),
            ],
            options={
                'verbose_name': 'Импорт файл',
                'verbose_name_plural': 'Импорт файлы',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, upload_to='categories/', verbose_name='Изображение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmp_id', models.CharField(blank=True, db_index=True, max_length=100, verbose_name='ID в 1С')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('code', models.CharField(max_length=50, verbose_name='Код товара')),
                ('catalog_number', models.CharField(max_length=50, verbose_name='Каталожный номер')),
                ('cross_number', models.CharField(blank=True, max_length=100, verbose_name='Кросс-код товара')),
                ('artikyl_number', models.CharField(blank=True, max_length=100, verbose_name='Дополнительный номер товара')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Старая цена')),
                ('applicability', models.TextField(blank=True, verbose_name='Применяемость')),
                ('in_stock', models.BooleanField(default=True, verbose_name='В наличии')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Популярный товар')),
                ('is_new', models.BooleanField(default=False, verbose_name='Новый товар')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Изображение')),
                ('is_main', models.BooleanField(default=False, verbose_name='Главное изображение')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товаров',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OeKod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oe_kod', models.CharField(db_index=True, max_length=100, verbose_name='Номер аналога OE')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oe_analogs', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Аналог OE',
                'verbose_name_plural': 'Аналоги OE',
                'indexes': [models.Index(fields=['oe_kod'], name='shop_oekod_oe_kod_61c6c7_idx')],
                'unique_together': {('product', 'oe_kod')},
            },
        ),
        migrations.CreateModel(
            name='ProductAnalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('analog_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analog_for', to='shop.product', verbose_name='Аналог')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analogs', to='shop.product', verbose_name='Основной товар')),
            ],
            options={
                'verbose_name': 'Аналог товара',
                'verbose_name_plural': 'Аналоги товаров',
                'unique_together': {('product', 'analog_product')},
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, upload_to='subcategories/', verbose_name='Изображение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='shop.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
                'ordering': ['parent', 'order', 'name'],
                'unique_together': {('parent', 'slug')},
            },
        ),
    ]
