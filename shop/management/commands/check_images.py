import os
from django.core.management.base import BaseCommand
from django.conf import settings
from shop.models import Product


class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏'

    def handle(self, *args, **options):
        self.stdout.write('üìä –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤...')
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        all_products = Product.objects.all()
        total_products = all_products.count()
        
        # –°—á–∏—Ç–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        products_with_images = 0
        products_without_images = 0
        missing_images = []
        
        for product in all_products:
            if product.has_main_image:
                products_with_images += 1
            else:
                products_without_images += 1
                if len(missing_images) < 10:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10
                    missing_images.append({
                        'code': product.code,
                        'name': product.name[:50],
                        'category': product.category.slug if product.category else 'None'
                    })
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        coverage_percent = (products_with_images / total_products * 100) if total_products > 0 else 0
        
        self.stdout.write(f'\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:')
        self.stdout.write(f'üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_products}')
        self.stdout.write(f'üñºÔ∏è –° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {products_with_images}')
        self.stdout.write(f'‚ùå –ë–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {products_without_images}')
        self.stdout.write(f'üìä –ü–æ–∫—Ä—ã—Ç–∏–µ: {coverage_percent:.1f}%')
        
        if coverage_percent >= 80:
            self.stdout.write(self.style.SUCCESS('üéâ –û–¢–õ–ò–ß–ù–û–ï –ø–æ–∫—Ä—ã—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏!'))
        elif coverage_percent >= 60:
            self.stdout.write(self.style.WARNING('‚ö†Ô∏è –•–û–†–û–®–ï–ï –ø–æ–∫—Ä—ã—Ç–∏–µ, –Ω–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å'))
        elif coverage_percent >= 40:
            self.stdout.write(self.style.WARNING('üì∏ –°–†–ï–î–ù–ï–ï –ø–æ–∫—Ä—ã—Ç–∏–µ - –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'))
        else:
            self.stdout.write(self.style.ERROR('‚ùó –ù–ò–ó–ö–û–ï –ø–æ–∫—Ä—ã—Ç–∏–µ - –∫—Ä–∏—Ç–∏—á–Ω–æ –º–∞–ª–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'))
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        if missing_images:
            self.stdout.write(f'\n‚ùå –ü–†–ò–ú–ï–†–´ –¢–û–í–ê–†–û–í –ë–ï–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:')
            for item in missing_images:
                self.stdout.write(f'  ‚Ä¢ {item["code"]} | {item["name"]} | {item["category"]}')
            
            if products_without_images > 10:
                self.stdout.write(f'  ... –∏ –µ—â–µ {products_without_images - 10} —Ç–æ–≤–∞—Ä–æ–≤')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        images_path = os.path.join(settings.BASE_DIR, 'images')
        if os.path.exists(images_path):
            total_image_files = 0
            for root, dirs, files in os.walk(images_path):
                total_image_files += len([f for f in files if f.lower().endswith(('.jpg', '.jpeg', '.png'))])
            
            self.stdout.write(f'\nüìÅ –§–ê–ô–õ–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê:')
            self.stdout.write(f'üñºÔ∏è –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_image_files}')
            
            if total_image_files > products_with_images:
                orphaned = total_image_files - products_with_images
                self.stdout.write(f'üëª –õ–∏—à–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤ (–±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤): ~{orphaned}')
        
        self.stdout.write(f'\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:')
        if coverage_percent < 60:
            self.stdout.write('‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤')
            self.stdout.write('‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞–º —Ç–æ–≤–∞—Ä–æ–≤')
        if coverage_percent > 90:
            self.stdout.write('‚Ä¢ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü–æ—á—Ç–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏')
        else:
            self.stdout.write('‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
            self.stdout.write('‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è') 